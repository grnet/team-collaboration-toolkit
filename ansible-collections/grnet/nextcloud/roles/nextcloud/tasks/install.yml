---
- name: Install apt packages required for nextcloud
  apt:
    name:
      - unzip
      - php
      - php-fpm
      - php-curl
      - php-gd
      - php-json
      - php-mbstring
      - php-xml
      - php-zip
      - php-bz2
      - php-intl
      - php-ldap
      - php-mysql
      - php-gmp
      - php-bcmath
      - redis-server
      - php-redis
      - python3-pymysql

- name: Start Redis
  service:
    name: redis
    state: started

- name: Set PHP memory limit
  lineinfile:
    path: /etc/php/{{ php_version }}/fpm/php.ini
    regexp: '^memory_limit\s*='
    line: memory_limit = {{ php_memory_limit }}
  notify:
    - Restart php-fpm

- name: Set opcache.interned_strings_buffer
  lineinfile:
    path: /etc/php/{{ php_version }}/fpm/php.ini
    regexp: '^;?opcache.interned_strings_buffer\s*='
    line: opcache.interned_strings_buffer = {{ opcache_interned_strings_buffer }}
  notify:
    - Restart php-fpm

- name: Install nextcloud
  unarchive:
    creates: /var/www/{{ nextcloud_fqdn }}/nextcloud/index.php
    src: "{{ nextcloud_download_url }}"
    dest: /var/www/{{ nextcloud_fqdn }}
    remote_src: yes
    owner: www-data
    group: www-data

- name: Check which databases exist
  community.mysql.mysql_info:
    login_host: "{{ mysql_fqdn }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    filter:
      - databases
    exclude_fields: db_size
  check_mode: no
  changed_when: false
  register: check_databases

- name: Setup nextcloud
  become: yes
  become_user: www-data
  command:
    chdir: /var/www/{{ nextcloud_fqdn }}/nextcloud
    cmd: >
      php occ maintenance:install --database-host={{ mysql_fqdn }}
      --database=mysql --database-name=nextcloud
      --database-user=root --database-pass={{ mysql_root_password }}
      --admin-user={{ nextcloud_admin_user }}
      --admin-pass={{ nextcloud_admin_user_password }}
  when: '"nextcloud" not in check_databases["databases"]'

- import_tasks: configure_general.yml

- name: Setup trashbin_retention_obligation
  # Deleted Files apps retention
  become: yes
  become_user: www-data
  lineinfile:
    path: /var/www/{{ nextcloud_fqdn }}/nextcloud/config/config.php
    regexp: trashbin_retention_obligation
    line: "  'trashbin_retention_obligation' => 'auto, 35',"
    insertbefore: '^\s*\);\s*$'
  when: "'deletedfiles' in nextcloud_apps"
  notify:
    - Restart php-fpm

- name: Check whether background jobs scheduler is set to cron
  become: yes
  become_user: www-data
  shell:
    chdir: /var/www/{{ nextcloud_fqdn }}/nextcloud
    cmd: php occ config:list core --output=plain | grep backgroundjobs_mode | awk '{ print $3 }'
  check_mode: no
  ignore_errors: yes
  changed_when: false
  register: check_background_jobs

- name: Set background jobs scheduler to cron
  become: yes
  become_user: www-data
  command:
    chdir: /var/www/{{ nextcloud_fqdn }}/nextcloud
    cmd: php occ background:cron
  when: check_background_jobs.stdout != "cron"

- name: Add nextcloud cron job
  copy:
    dest: /etc/cron.d/nextcloud
    content: "{{ nextcloud_cron_schedule }} www-data php -f /var/www/{{ nextcloud_fqdn}}/nextcloud/cron.php\n"

- name: Turn off PHP output_buffering (required by Nextcloud)
  lineinfile:
    path: /etc/php/{{ php_version }}/fpm/php.ini
    regexp: "^output_buffering ="
    line: "output_buffering = Off"
  notify:
    - Restart php-fpm

- name: Setup php-fpm for nextcloud
  template:
    src: fpm-nextcloud.conf
    dest: /etc/php/{{ php_version }}/fpm/pool.d/nextcloud.conf
  notify:
    - Restart php-fpm

- name: Setup apache for nextcloud
  template:
    src: apache-nextcloud.conf
    dest: /etc/apache2/snippets/{{ nextcloud_fqdn }}/nextcloud.conf
  notify:
    - Restart apache

- name: Activate apache proxy_fcgi
  apache2_module:
    state: present
    name: proxy_fcgi
  notify:
    - Restart apache

- name: Install nextcloud apps
  become: yes
  become_user: www-data
  shell: echo '{{ nextcloud_admin_user_password }}' | php occ app:install {{ item }}
  args:
    chdir: /var/www/{{ nextcloud_fqdn }}/nextcloud/
    creates: /var/www/{{ nextcloud_fqdn }}/nextcloud/apps/{{ item }}
  loop: "{{ nextcloud_apps }}"

- name: Check whether collabora online server address has been set
  become: yes
  become_user: www-data
  command:
    chdir: /var/www/{{ nextcloud_fqdn }}/nextcloud/
    cmd: php occ config:app:get richdocuments wopi_url
  check_mode: no
  ignore_errors: yes
  changed_when: false
  register: check_collabora_url

- name: Setup collabora online server address
  become: yes
  become_user: www-data
  command:
    chdir: /var/www/{{ nextcloud_fqdn }}/nextcloud/
    cmd: php occ config:app:set --value https://{{ collabora_fqdn }} richdocuments wopi_url
  when: check_collabora_url.stdout != "https://" ~ collabora_fqdn
  notify:
    - Activate richdocuments config

- name: Install Nextcloud translation tool
  copy:
    src: translationtool.phar
    dest: /usr/local/bin/

- name: Copy translation files
  copy:
    src: translationfiles
    dest: /var/www/{{ nextcloud_fqdn }}/nextcloud/
    owner: www-data
  notify:
    - Convert po translation files

- name: Create background worker service for Nextcloud Assistant
  template:
    src: nextcloud-assistant-background-worker.service
    dest: '/etc/systemd/system/nextcloud-assistant-background-worker@.service'
  when: nextcloud_assistant_background_worker

- name: Enable background worker service for Nextcloud Assistant
  systemd:
    name: 'nextcloud-assistant-background-worker@{{ item }}.service'
    enabled: yes
    state: started
    daemon-reload: yes
  loop: [1, 2, 3, 4]
  when: nextcloud_assistant_background_worker

- import_tasks: configure_mysql_tls.yml
- import_tasks: configure_email.yml
